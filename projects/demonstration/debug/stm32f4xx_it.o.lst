   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_it.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	Counter
  19              		.bss
  22              	Counter:
  23 0000 00       		.space	1
  24              		.global	TempAcceleration
  27              	TempAcceleration:
  28 0001 00       		.space	1
  29              		.text
  30              		.align	2
  31              		.global	NMI_Handler
  32              		.thumb
  33              		.thumb_func
  35              	NMI_Handler:
  36              	.LFB110:
  37              		.file 1 "../stm32f4xx_it.c"
   1:../stm32f4xx_it.c **** /**
   2:../stm32f4xx_it.c ****   ******************************************************************************
   3:../stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:../stm32f4xx_it.c ****   * @author  MCD Application Team
   5:../stm32f4xx_it.c ****   * @version V1.0.0
   6:../stm32f4xx_it.c ****   * @date    19-September-2011
   7:../stm32f4xx_it.c ****   * @brief   Main Interrupt Service Routines.
   8:../stm32f4xx_it.c ****   *          This file provides all exceptions handler and peripherals interrupt
   9:../stm32f4xx_it.c ****   *          service routine.
  10:../stm32f4xx_it.c ****   ******************************************************************************
  11:../stm32f4xx_it.c ****   * @attention
  12:../stm32f4xx_it.c ****   *
  13:../stm32f4xx_it.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  14:../stm32f4xx_it.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  15:../stm32f4xx_it.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  16:../stm32f4xx_it.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  17:../stm32f4xx_it.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  18:../stm32f4xx_it.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  19:../stm32f4xx_it.c ****   *
  20:../stm32f4xx_it.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  21:../stm32f4xx_it.c ****   ******************************************************************************
  22:../stm32f4xx_it.c ****   */ 
  23:../stm32f4xx_it.c **** 
  24:../stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  25:../stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  26:../stm32f4xx_it.c **** #include "main.h"
  27:../stm32f4xx_it.c **** #include "usb_core.h"
  28:../stm32f4xx_it.c **** #include "usbd_core.h"
  29:../stm32f4xx_it.c **** #include "stm32f4_discovery.h"
  30:../stm32f4xx_it.c **** #include "usbd_hid_core.h"
  31:../stm32f4xx_it.c **** 
  32:../stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  33:../stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:../stm32f4xx_it.c **** #define CURSOR_STEP     7
  35:../stm32f4xx_it.c **** 
  36:../stm32f4xx_it.c **** extern uint8_t Buffer[6];
  37:../stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:../stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  39:../stm32f4xx_it.c **** extern __IO uint8_t DemoEnterCondition;
  40:../stm32f4xx_it.c **** uint8_t Counter  = 0x00;
  41:../stm32f4xx_it.c **** extern int8_t X_Offset;
  42:../stm32f4xx_it.c **** extern int8_t Y_Offset;
  43:../stm32f4xx_it.c **** extern __IO uint8_t UserButtonPressed;
  44:../stm32f4xx_it.c **** __IO uint8_t TempAcceleration = 0;
  45:../stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  46:../stm32f4xx_it.c **** extern USB_OTG_CORE_HANDLE           USB_OTG_dev;
  47:../stm32f4xx_it.c **** static uint8_t *USBD_HID_GetPos (void);
  48:../stm32f4xx_it.c **** extern uint32_t USBD_OTG_ISR_Handler (USB_OTG_CORE_HANDLE *pdev);
  49:../stm32f4xx_it.c **** 
  50:../stm32f4xx_it.c **** /******************************************************************************/
  51:../stm32f4xx_it.c **** /*            Cortex-M3 Processor Exceptions Handlers                         */
  52:../stm32f4xx_it.c **** /******************************************************************************/
  53:../stm32f4xx_it.c **** 
  54:../stm32f4xx_it.c **** /**
  55:../stm32f4xx_it.c ****   * @brief   This function handles NMI exception.
  56:../stm32f4xx_it.c ****   * @param  None
  57:../stm32f4xx_it.c ****   * @retval None
  58:../stm32f4xx_it.c ****   */
  59:../stm32f4xx_it.c **** void NMI_Handler(void)
  60:../stm32f4xx_it.c **** {
  38              		.loc 1 60 0
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 0
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42              		@ link register save eliminated.
  43 0000 80B4     		push	{r7}
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 4
  46              		.cfi_offset 7, -4
  47 0002 00AF     		add	r7, sp, #0
  48              	.LCFI1:
  49              		.cfi_def_cfa_register 7
  61:../stm32f4xx_it.c **** }
  50              		.loc 1 61 0
  51 0004 BD46     		mov	sp, r7
  52 0006 80BC     		pop	{r7}
  53 0008 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE110:
  57 000a 00BF     		.align	2
  58              		.global	HardFault_Handler
  59              		.thumb
  60              		.thumb_func
  62              	HardFault_Handler:
  63              	.LFB111:
  62:../stm32f4xx_it.c **** 
  63:../stm32f4xx_it.c **** /**
  64:../stm32f4xx_it.c ****   * @brief  This function handles Hard Fault exception.
  65:../stm32f4xx_it.c ****   * @param  None
  66:../stm32f4xx_it.c ****   * @retval None
  67:../stm32f4xx_it.c ****   */
  68:../stm32f4xx_it.c **** void HardFault_Handler(void)
  69:../stm32f4xx_it.c **** {
  64              		.loc 1 69 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69 000c 80B4     		push	{r7}
  70              	.LCFI2:
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 7, -4
  73 000e 00AF     		add	r7, sp, #0
  74              	.LCFI3:
  75              		.cfi_def_cfa_register 7
  76              	.L3:
  70:../stm32f4xx_it.c ****   /* Go to infinite loop when Hard Fault exception occurs */
  71:../stm32f4xx_it.c ****   while (1)
  72:../stm32f4xx_it.c ****   {
  73:../stm32f4xx_it.c ****   }
  77              		.loc 1 73 0 discriminator 1
  78 0010 FEE7     		b	.L3
  79              		.cfi_endproc
  80              	.LFE111:
  82 0012 00BF     		.align	2
  83              		.global	MemManage_Handler
  84              		.thumb
  85              		.thumb_func
  87              	MemManage_Handler:
  88              	.LFB112:
  74:../stm32f4xx_it.c **** }
  75:../stm32f4xx_it.c **** 
  76:../stm32f4xx_it.c **** /**
  77:../stm32f4xx_it.c ****   * @brief  This function handles Memory Manage exception.
  78:../stm32f4xx_it.c ****   * @param  None
  79:../stm32f4xx_it.c ****   * @retval None
  80:../stm32f4xx_it.c ****   */
  81:../stm32f4xx_it.c **** void MemManage_Handler(void)
  82:../stm32f4xx_it.c **** {
  89              		.loc 1 82 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 1, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94 0014 80B4     		push	{r7}
  95              	.LCFI4:
  96              		.cfi_def_cfa_offset 4
  97              		.cfi_offset 7, -4
  98 0016 00AF     		add	r7, sp, #0
  99              	.LCFI5:
 100              		.cfi_def_cfa_register 7
 101              	.L5:
  83:../stm32f4xx_it.c ****   /* Go to infinite loop when Memory Manage exception occurs */
  84:../stm32f4xx_it.c ****   while (1)
  85:../stm32f4xx_it.c ****   {
  86:../stm32f4xx_it.c ****   }
 102              		.loc 1 86 0 discriminator 1
 103 0018 FEE7     		b	.L5
 104              		.cfi_endproc
 105              	.LFE112:
 107 001a 00BF     		.align	2
 108              		.global	BusFault_Handler
 109              		.thumb
 110              		.thumb_func
 112              	BusFault_Handler:
 113              	.LFB113:
  87:../stm32f4xx_it.c **** }
  88:../stm32f4xx_it.c **** 
  89:../stm32f4xx_it.c **** /**
  90:../stm32f4xx_it.c ****   * @brief  This function handles Bus Fault exception.
  91:../stm32f4xx_it.c ****   * @param  None
  92:../stm32f4xx_it.c ****   * @retval None
  93:../stm32f4xx_it.c ****   */
  94:../stm32f4xx_it.c **** void BusFault_Handler(void)
  95:../stm32f4xx_it.c **** {
 114              		.loc 1 95 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118              		@ link register save eliminated.
 119 001c 80B4     		push	{r7}
 120              	.LCFI6:
 121              		.cfi_def_cfa_offset 4
 122              		.cfi_offset 7, -4
 123 001e 00AF     		add	r7, sp, #0
 124              	.LCFI7:
 125              		.cfi_def_cfa_register 7
 126              	.L7:
  96:../stm32f4xx_it.c ****   /* Go to infinite loop when Bus Fault exception occurs */
  97:../stm32f4xx_it.c ****   while (1)
  98:../stm32f4xx_it.c ****   {
  99:../stm32f4xx_it.c ****   }
 127              		.loc 1 99 0 discriminator 1
 128 0020 FEE7     		b	.L7
 129              		.cfi_endproc
 130              	.LFE113:
 132 0022 00BF     		.align	2
 133              		.global	UsageFault_Handler
 134              		.thumb
 135              		.thumb_func
 137              	UsageFault_Handler:
 138              	.LFB114:
 100:../stm32f4xx_it.c **** }
 101:../stm32f4xx_it.c **** 
 102:../stm32f4xx_it.c **** /**
 103:../stm32f4xx_it.c ****   * @brief  This function handles Usage Fault exception.
 104:../stm32f4xx_it.c ****   * @param  None
 105:../stm32f4xx_it.c ****   * @retval None
 106:../stm32f4xx_it.c ****   */
 107:../stm32f4xx_it.c **** void UsageFault_Handler(void)
 108:../stm32f4xx_it.c **** {
 139              		.loc 1 108 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144 0024 80B4     		push	{r7}
 145              	.LCFI8:
 146              		.cfi_def_cfa_offset 4
 147              		.cfi_offset 7, -4
 148 0026 00AF     		add	r7, sp, #0
 149              	.LCFI9:
 150              		.cfi_def_cfa_register 7
 151              	.L9:
 109:../stm32f4xx_it.c ****   /* Go to infinite loop when Usage Fault exception occurs */
 110:../stm32f4xx_it.c ****   while (1)
 111:../stm32f4xx_it.c ****   {
 112:../stm32f4xx_it.c ****   }
 152              		.loc 1 112 0 discriminator 1
 153 0028 FEE7     		b	.L9
 154              		.cfi_endproc
 155              	.LFE114:
 157 002a 00BF     		.align	2
 158              		.global	SVC_Handler
 159              		.thumb
 160              		.thumb_func
 162              	SVC_Handler:
 163              	.LFB115:
 113:../stm32f4xx_it.c **** }
 114:../stm32f4xx_it.c **** 
 115:../stm32f4xx_it.c **** /**
 116:../stm32f4xx_it.c ****   * @brief  This function handles SVCall exception.
 117:../stm32f4xx_it.c ****   * @param  None
 118:../stm32f4xx_it.c ****   * @retval None
 119:../stm32f4xx_it.c ****   */
 120:../stm32f4xx_it.c **** void SVC_Handler(void)
 121:../stm32f4xx_it.c **** {
 164              		.loc 1 121 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 169 002c 80B4     		push	{r7}
 170              	.LCFI10:
 171              		.cfi_def_cfa_offset 4
 172              		.cfi_offset 7, -4
 173 002e 00AF     		add	r7, sp, #0
 174              	.LCFI11:
 175              		.cfi_def_cfa_register 7
 122:../stm32f4xx_it.c **** }
 176              		.loc 1 122 0
 177 0030 BD46     		mov	sp, r7
 178 0032 80BC     		pop	{r7}
 179 0034 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE115:
 183 0036 00BF     		.align	2
 184              		.global	DebugMon_Handler
 185              		.thumb
 186              		.thumb_func
 188              	DebugMon_Handler:
 189              	.LFB116:
 123:../stm32f4xx_it.c **** 
 124:../stm32f4xx_it.c **** /**
 125:../stm32f4xx_it.c ****   * @brief  This function handles Debug Monitor exception.
 126:../stm32f4xx_it.c ****   * @param  None
 127:../stm32f4xx_it.c ****   * @retval None
 128:../stm32f4xx_it.c ****   */
 129:../stm32f4xx_it.c **** void DebugMon_Handler(void)
 130:../stm32f4xx_it.c **** {
 190              		.loc 1 130 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 195 0038 80B4     		push	{r7}
 196              	.LCFI12:
 197              		.cfi_def_cfa_offset 4
 198              		.cfi_offset 7, -4
 199 003a 00AF     		add	r7, sp, #0
 200              	.LCFI13:
 201              		.cfi_def_cfa_register 7
 131:../stm32f4xx_it.c **** }
 202              		.loc 1 131 0
 203 003c BD46     		mov	sp, r7
 204 003e 80BC     		pop	{r7}
 205 0040 7047     		bx	lr
 206              		.cfi_endproc
 207              	.LFE116:
 209 0042 00BF     		.align	2
 210              		.global	PendSV_Handler
 211              		.thumb
 212              		.thumb_func
 214              	PendSV_Handler:
 215              	.LFB117:
 132:../stm32f4xx_it.c **** 
 133:../stm32f4xx_it.c **** /**
 134:../stm32f4xx_it.c ****   * @brief  This function handles PendSVC exception.
 135:../stm32f4xx_it.c ****   * @param  None
 136:../stm32f4xx_it.c ****   * @retval None
 137:../stm32f4xx_it.c ****   */
 138:../stm32f4xx_it.c **** void PendSV_Handler(void)
 139:../stm32f4xx_it.c **** {
 216              		.loc 1 139 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 221 0044 80B4     		push	{r7}
 222              	.LCFI14:
 223              		.cfi_def_cfa_offset 4
 224              		.cfi_offset 7, -4
 225 0046 00AF     		add	r7, sp, #0
 226              	.LCFI15:
 227              		.cfi_def_cfa_register 7
 140:../stm32f4xx_it.c **** }
 228              		.loc 1 140 0
 229 0048 BD46     		mov	sp, r7
 230 004a 80BC     		pop	{r7}
 231 004c 7047     		bx	lr
 232              		.cfi_endproc
 233              	.LFE117:
 235 004e 00BF     		.align	2
 236              		.global	SysTick_Handler
 237              		.thumb
 238              		.thumb_func
 240              	SysTick_Handler:
 241              	.LFB118:
 141:../stm32f4xx_it.c **** 
 142:../stm32f4xx_it.c **** /**
 143:../stm32f4xx_it.c ****   * @brief  This function handles SysTick Handler.
 144:../stm32f4xx_it.c ****   * @param  None
 145:../stm32f4xx_it.c ****   * @retval None
 146:../stm32f4xx_it.c ****   */
 147:../stm32f4xx_it.c **** void SysTick_Handler(void)
 148:../stm32f4xx_it.c **** {
 242              		.loc 1 148 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 16
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 0050 80B5     		push	{r7, lr}
 247              	.LCFI16:
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 14, -4
 250              		.cfi_offset 7, -8
 251 0052 84B0     		sub	sp, sp, #16
 252              	.LCFI17:
 253              		.cfi_def_cfa_offset 24
 254 0054 00AF     		add	r7, sp, #0
 255              	.LCFI18:
 256              		.cfi_def_cfa_register 7
 149:../stm32f4xx_it.c ****   uint8_t *buf;
 150:../stm32f4xx_it.c ****   uint8_t temp1, temp2 = 0x00;
 257              		.loc 1 150 0
 258 0056 4FF00003 		mov	r3, #0
 259 005a FB73     		strb	r3, [r7, #15]
 151:../stm32f4xx_it.c ****   
 152:../stm32f4xx_it.c ****   if (DemoEnterCondition == 0x00)
 260              		.loc 1 152 0
 261 005c 40F20003 		movw	r3, #:lower16:DemoEnterCondition
 262 0060 C0F20003 		movt	r3, #:upper16:DemoEnterCondition
 263 0064 1B78     		ldrb	r3, [r3, #0]
 264 0066 DBB2     		uxtb	r3, r3
 265 0068 002B     		cmp	r3, #0
 266 006a 02D1     		bne	.L14
 153:../stm32f4xx_it.c ****   {
 154:../stm32f4xx_it.c ****     TimingDelay_Decrement();
 267              		.loc 1 154 0
 268 006c FFF7FEFF 		bl	TimingDelay_Decrement
 269 0070 64E1     		b	.L13
 270              	.L14:
 155:../stm32f4xx_it.c ****   }
 156:../stm32f4xx_it.c ****   else
 157:../stm32f4xx_it.c ****   {
 158:../stm32f4xx_it.c ****     buf = USBD_HID_GetPos();
 271              		.loc 1 158 0
 272 0072 00F0A1F9 		bl	USBD_HID_GetPos
 273 0076 B860     		str	r0, [r7, #8]
 159:../stm32f4xx_it.c ****     if((buf[1] != 0) ||(buf[2] != 0))
 274              		.loc 1 159 0
 275 0078 BB68     		ldr	r3, [r7, #8]
 276 007a 03F10103 		add	r3, r3, #1
 277 007e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 278 0080 002B     		cmp	r3, #0
 279 0082 05D1     		bne	.L16
 280              		.loc 1 159 0 is_stmt 0 discriminator 1
 281 0084 BB68     		ldr	r3, [r7, #8]
 282 0086 03F10203 		add	r3, r3, #2
 283 008a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 284 008c 002B     		cmp	r3, #0
 285 008e 08D0     		beq	.L17
 286              	.L16:
 160:../stm32f4xx_it.c ****     {
 161:../stm32f4xx_it.c ****       USBD_HID_SendReport (&USB_OTG_dev, 
 287              		.loc 1 161 0 is_stmt 1
 288 0090 40F20000 		movw	r0, #:lower16:USB_OTG_dev
 289 0094 C0F20000 		movt	r0, #:upper16:USB_OTG_dev
 290 0098 B968     		ldr	r1, [r7, #8]
 291 009a 4FF00402 		mov	r2, #4
 292 009e FFF7FEFF 		bl	USBD_HID_SendReport
 293              	.L17:
 162:../stm32f4xx_it.c ****                            buf,
 163:../stm32f4xx_it.c ****                            4);
 164:../stm32f4xx_it.c ****     } 
 165:../stm32f4xx_it.c ****     Counter ++;
 294              		.loc 1 165 0
 295 00a2 40F20003 		movw	r3, #:lower16:Counter
 296 00a6 C0F20003 		movt	r3, #:upper16:Counter
 297 00aa 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 298 00ac 03F10103 		add	r3, r3, #1
 299 00b0 DAB2     		uxtb	r2, r3
 300 00b2 40F20003 		movw	r3, #:lower16:Counter
 301 00b6 C0F20003 		movt	r3, #:upper16:Counter
 302 00ba 1A70     		strb	r2, [r3, #0]
 166:../stm32f4xx_it.c ****     if (Counter == 10)
 303              		.loc 1 166 0
 304 00bc 40F20003 		movw	r3, #:lower16:Counter
 305 00c0 C0F20003 		movt	r3, #:upper16:Counter
 306 00c4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 307 00c6 0A2B     		cmp	r3, #10
 308 00c8 40F03881 		bne	.L13
 167:../stm32f4xx_it.c ****     {
 168:../stm32f4xx_it.c ****       Buffer[0] = 0;
 309              		.loc 1 168 0
 310 00cc 40F20003 		movw	r3, #:lower16:Buffer
 311 00d0 C0F20003 		movt	r3, #:upper16:Buffer
 312 00d4 4FF00002 		mov	r2, #0
 313 00d8 1A70     		strb	r2, [r3, #0]
 169:../stm32f4xx_it.c ****       Buffer[2] = 0;
 314              		.loc 1 169 0
 315 00da 40F20003 		movw	r3, #:lower16:Buffer
 316 00de C0F20003 		movt	r3, #:upper16:Buffer
 317 00e2 4FF00002 		mov	r2, #0
 318 00e6 9A70     		strb	r2, [r3, #2]
 170:../stm32f4xx_it.c ****       /* Disable All TIM4 Capture Compare Channels */
 171:../stm32f4xx_it.c ****       TIM_CCxCmd(TIM4, TIM_Channel_1, DISABLE);
 319              		.loc 1 171 0
 320 00e8 4FF40060 		mov	r0, #2048
 321 00ec C4F20000 		movt	r0, 16384
 322 00f0 4FF00001 		mov	r1, #0
 323 00f4 4FF00002 		mov	r2, #0
 324 00f8 FFF7FEFF 		bl	TIM_CCxCmd
 172:../stm32f4xx_it.c ****       TIM_CCxCmd(TIM4, TIM_Channel_2, DISABLE);
 325              		.loc 1 172 0
 326 00fc 4FF40060 		mov	r0, #2048
 327 0100 C4F20000 		movt	r0, 16384
 328 0104 4FF00401 		mov	r1, #4
 329 0108 4FF00002 		mov	r2, #0
 330 010c FFF7FEFF 		bl	TIM_CCxCmd
 173:../stm32f4xx_it.c ****       TIM_CCxCmd(TIM4, TIM_Channel_3, DISABLE);
 331              		.loc 1 173 0
 332 0110 4FF40060 		mov	r0, #2048
 333 0114 C4F20000 		movt	r0, 16384
 334 0118 4FF00801 		mov	r1, #8
 335 011c 4FF00002 		mov	r2, #0
 336 0120 FFF7FEFF 		bl	TIM_CCxCmd
 174:../stm32f4xx_it.c ****       TIM_CCxCmd(TIM4, TIM_Channel_4, DISABLE);
 337              		.loc 1 174 0
 338 0124 4FF40060 		mov	r0, #2048
 339 0128 C4F20000 		movt	r0, 16384
 340 012c 4FF00C01 		mov	r1, #12
 341 0130 4FF00002 		mov	r2, #0
 342 0134 FFF7FEFF 		bl	TIM_CCxCmd
 175:../stm32f4xx_it.c ****       
 176:../stm32f4xx_it.c ****       LIS302DL_Read(Buffer, LIS302DL_OUT_X_ADDR, 6);
 343              		.loc 1 176 0
 344 0138 40F20000 		movw	r0, #:lower16:Buffer
 345 013c C0F20000 		movt	r0, #:upper16:Buffer
 346 0140 4FF02901 		mov	r1, #41
 347 0144 4FF00602 		mov	r2, #6
 348 0148 FFF7FEFF 		bl	LIS302DL_Read
 177:../stm32f4xx_it.c ****       /* Remove the offsets values from data */
 178:../stm32f4xx_it.c ****       Buffer[0] -= X_Offset;
 349              		.loc 1 178 0
 350 014c 40F20003 		movw	r3, #:lower16:Buffer
 351 0150 C0F20003 		movt	r3, #:upper16:Buffer
 352 0154 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 353 0156 40F20003 		movw	r3, #:lower16:X_Offset
 354 015a C0F20003 		movt	r3, #:upper16:X_Offset
 355 015e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 356 0160 DBB2     		uxtb	r3, r3
 357 0162 D31A     		subs	r3, r2, r3
 358 0164 DAB2     		uxtb	r2, r3
 359 0166 40F20003 		movw	r3, #:lower16:Buffer
 360 016a C0F20003 		movt	r3, #:upper16:Buffer
 361 016e 1A70     		strb	r2, [r3, #0]
 179:../stm32f4xx_it.c ****       Buffer[2] -= Y_Offset;
 362              		.loc 1 179 0
 363 0170 40F20003 		movw	r3, #:lower16:Buffer
 364 0174 C0F20003 		movt	r3, #:upper16:Buffer
 365 0178 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 366 017a 40F20003 		movw	r3, #:lower16:Y_Offset
 367 017e C0F20003 		movt	r3, #:upper16:Y_Offset
 368 0182 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 369 0184 DBB2     		uxtb	r3, r3
 370 0186 D31A     		subs	r3, r2, r3
 371 0188 DAB2     		uxtb	r2, r3
 372 018a 40F20003 		movw	r3, #:lower16:Buffer
 373 018e C0F20003 		movt	r3, #:upper16:Buffer
 374 0192 9A70     		strb	r2, [r3, #2]
 180:../stm32f4xx_it.c ****       /* Update autoreload and capture compare registers value*/
 181:../stm32f4xx_it.c ****       temp1 = ABS((int8_t)(Buffer[0]));
 375              		.loc 1 181 0
 376 0194 40F20003 		movw	r3, #:lower16:Buffer
 377 0198 C0F20003 		movt	r3, #:upper16:Buffer
 378 019c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 379 019e DBB2     		uxtb	r3, r3
 380 01a0 5BB2     		sxtb	r3, r3
 381 01a2 002B     		cmp	r3, #0
 382 01a4 B8BF     		it	lt
 383 01a6 5B42     		rsblt	r3, r3, #0
 384 01a8 FB71     		strb	r3, [r7, #7]
 182:../stm32f4xx_it.c ****       temp2 = ABS((int8_t)(Buffer[2]));       
 385              		.loc 1 182 0
 386 01aa 40F20003 		movw	r3, #:lower16:Buffer
 387 01ae C0F20003 		movt	r3, #:upper16:Buffer
 388 01b2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 389 01b4 DBB2     		uxtb	r3, r3
 390 01b6 5BB2     		sxtb	r3, r3
 391 01b8 002B     		cmp	r3, #0
 392 01ba B8BF     		it	lt
 393 01bc 5B42     		rsblt	r3, r3, #0
 394 01be FB73     		strb	r3, [r7, #15]
 183:../stm32f4xx_it.c ****       TempAcceleration = MAX(temp1, temp2);
 395              		.loc 1 183 0
 396 01c0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 397 01c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 398 01c4 9A42     		cmp	r2, r3
 399 01c6 28BF     		it	cs
 400 01c8 1346     		movcs	r3, r2
 401 01ca DAB2     		uxtb	r2, r3
 402 01cc 40F20003 		movw	r3, #:lower16:TempAcceleration
 403 01d0 C0F20003 		movt	r3, #:upper16:TempAcceleration
 404 01d4 1A70     		strb	r2, [r3, #0]
 184:../stm32f4xx_it.c **** 
 185:../stm32f4xx_it.c ****       if(TempAcceleration != 0)
 405              		.loc 1 185 0
 406 01d6 40F20003 		movw	r3, #:lower16:TempAcceleration
 407 01da C0F20003 		movt	r3, #:upper16:TempAcceleration
 408 01de 1B78     		ldrb	r3, [r3, #0]
 409 01e0 DBB2     		uxtb	r3, r3
 410 01e2 002B     		cmp	r3, #0
 411 01e4 00F0A380 		beq	.L18
 186:../stm32f4xx_it.c ****       { 
 187:../stm32f4xx_it.c ****         if ((int8_t)Buffer[0] < -2)
 412              		.loc 1 187 0
 413 01e8 40F20003 		movw	r3, #:lower16:Buffer
 414 01ec C0F20003 		movt	r3, #:upper16:Buffer
 415 01f0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 416 01f2 DBB2     		uxtb	r3, r3
 417 01f4 5BB2     		sxtb	r3, r3
 418 01f6 13F1020F 		cmn	r3, #2
 419 01fa 1ADA     		bge	.L19
 188:../stm32f4xx_it.c ****         {
 189:../stm32f4xx_it.c ****           /* Enable TIM4 Capture Compare Channel 4 */
 190:../stm32f4xx_it.c ****           TIM_CCxCmd(TIM4, TIM_Channel_4, ENABLE);
 420              		.loc 1 190 0
 421 01fc 4FF40060 		mov	r0, #2048
 422 0200 C4F20000 		movt	r0, 16384
 423 0204 4FF00C01 		mov	r1, #12
 424 0208 4FF00102 		mov	r2, #1
 425 020c FFF7FEFF 		bl	TIM_CCxCmd
 191:../stm32f4xx_it.c ****           /* Sets the TIM4 Capture Compare4 Register value */
 192:../stm32f4xx_it.c ****           TIM_SetCompare4(TIM4, TIM_CCR/TempAcceleration);
 426              		.loc 1 192 0
 427 0210 40F20003 		movw	r3, #:lower16:TempAcceleration
 428 0214 C0F20003 		movt	r3, #:upper16:TempAcceleration
 429 0218 1B78     		ldrb	r3, [r3, #0]
 430 021a DBB2     		uxtb	r3, r3
 431 021c 4FF47A72 		mov	r2, #1000
 432 0220 92FBF3F3 		sdiv	r3, r2, r3
 433 0224 4FF40060 		mov	r0, #2048
 434 0228 C4F20000 		movt	r0, 16384
 435 022c 1946     		mov	r1, r3
 436 022e FFF7FEFF 		bl	TIM_SetCompare4
 437              	.L19:
 193:../stm32f4xx_it.c ****         }
 194:../stm32f4xx_it.c ****         if ((int8_t)Buffer[0] > 2)
 438              		.loc 1 194 0
 439 0232 40F20003 		movw	r3, #:lower16:Buffer
 440 0236 C0F20003 		movt	r3, #:upper16:Buffer
 441 023a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 442 023c DBB2     		uxtb	r3, r3
 443 023e 5BB2     		sxtb	r3, r3
 444 0240 022B     		cmp	r3, #2
 445 0242 1ADD     		ble	.L20
 195:../stm32f4xx_it.c ****         {
 196:../stm32f4xx_it.c ****           /* Enable TIM4 Capture Compare Channel 2 */
 197:../stm32f4xx_it.c ****           TIM_CCxCmd(TIM4, TIM_Channel_2, ENABLE);
 446              		.loc 1 197 0
 447 0244 4FF40060 		mov	r0, #2048
 448 0248 C4F20000 		movt	r0, 16384
 449 024c 4FF00401 		mov	r1, #4
 450 0250 4FF00102 		mov	r2, #1
 451 0254 FFF7FEFF 		bl	TIM_CCxCmd
 198:../stm32f4xx_it.c ****           /* Sets the TIM4 Capture Compare2 Register value */
 199:../stm32f4xx_it.c ****           TIM_SetCompare2(TIM4, TIM_CCR/TempAcceleration);
 452              		.loc 1 199 0
 453 0258 40F20003 		movw	r3, #:lower16:TempAcceleration
 454 025c C0F20003 		movt	r3, #:upper16:TempAcceleration
 455 0260 1B78     		ldrb	r3, [r3, #0]
 456 0262 DBB2     		uxtb	r3, r3
 457 0264 4FF47A72 		mov	r2, #1000
 458 0268 92FBF3F3 		sdiv	r3, r2, r3
 459 026c 4FF40060 		mov	r0, #2048
 460 0270 C4F20000 		movt	r0, 16384
 461 0274 1946     		mov	r1, r3
 462 0276 FFF7FEFF 		bl	TIM_SetCompare2
 463              	.L20:
 200:../stm32f4xx_it.c ****         }
 201:../stm32f4xx_it.c ****         if ((int8_t)Buffer[2] > 2)
 464              		.loc 1 201 0
 465 027a 40F20003 		movw	r3, #:lower16:Buffer
 466 027e C0F20003 		movt	r3, #:upper16:Buffer
 467 0282 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 468 0284 DBB2     		uxtb	r3, r3
 469 0286 5BB2     		sxtb	r3, r3
 470 0288 022B     		cmp	r3, #2
 471 028a 1ADD     		ble	.L21
 202:../stm32f4xx_it.c ****         { 
 203:../stm32f4xx_it.c ****           /* Enable TIM4 Capture Compare Channel 1 */
 204:../stm32f4xx_it.c ****           TIM_CCxCmd(TIM4, TIM_Channel_1, ENABLE);
 472              		.loc 1 204 0
 473 028c 4FF40060 		mov	r0, #2048
 474 0290 C4F20000 		movt	r0, 16384
 475 0294 4FF00001 		mov	r1, #0
 476 0298 4FF00102 		mov	r2, #1
 477 029c FFF7FEFF 		bl	TIM_CCxCmd
 205:../stm32f4xx_it.c ****           /* Sets the TIM4 Capture Compare1 Register value */
 206:../stm32f4xx_it.c ****           TIM_SetCompare1(TIM4, TIM_CCR/TempAcceleration);
 478              		.loc 1 206 0
 479 02a0 40F20003 		movw	r3, #:lower16:TempAcceleration
 480 02a4 C0F20003 		movt	r3, #:upper16:TempAcceleration
 481 02a8 1B78     		ldrb	r3, [r3, #0]
 482 02aa DBB2     		uxtb	r3, r3
 483 02ac 4FF47A72 		mov	r2, #1000
 484 02b0 92FBF3F3 		sdiv	r3, r2, r3
 485 02b4 4FF40060 		mov	r0, #2048
 486 02b8 C4F20000 		movt	r0, 16384
 487 02bc 1946     		mov	r1, r3
 488 02be FFF7FEFF 		bl	TIM_SetCompare1
 489              	.L21:
 207:../stm32f4xx_it.c ****         }      
 208:../stm32f4xx_it.c ****         if ((int8_t)Buffer[2] < -2)
 490              		.loc 1 208 0
 491 02c2 40F20003 		movw	r3, #:lower16:Buffer
 492 02c6 C0F20003 		movt	r3, #:upper16:Buffer
 493 02ca 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 494 02cc DBB2     		uxtb	r3, r3
 495 02ce 5BB2     		sxtb	r3, r3
 496 02d0 13F1020F 		cmn	r3, #2
 497 02d4 1ADA     		bge	.L22
 209:../stm32f4xx_it.c ****         { 
 210:../stm32f4xx_it.c ****           /* Enable TIM4 Capture Compare Channel 3 */
 211:../stm32f4xx_it.c ****           TIM_CCxCmd(TIM4, TIM_Channel_3, ENABLE);
 498              		.loc 1 211 0
 499 02d6 4FF40060 		mov	r0, #2048
 500 02da C4F20000 		movt	r0, 16384
 501 02de 4FF00801 		mov	r1, #8
 502 02e2 4FF00102 		mov	r2, #1
 503 02e6 FFF7FEFF 		bl	TIM_CCxCmd
 212:../stm32f4xx_it.c ****           /* Sets the TIM4 Capture Compare3 Register value */
 213:../stm32f4xx_it.c ****           TIM_SetCompare3(TIM4, TIM_CCR/TempAcceleration);
 504              		.loc 1 213 0
 505 02ea 40F20003 		movw	r3, #:lower16:TempAcceleration
 506 02ee C0F20003 		movt	r3, #:upper16:TempAcceleration
 507 02f2 1B78     		ldrb	r3, [r3, #0]
 508 02f4 DBB2     		uxtb	r3, r3
 509 02f6 4FF47A72 		mov	r2, #1000
 510 02fa 92FBF3F3 		sdiv	r3, r2, r3
 511 02fe 4FF40060 		mov	r0, #2048
 512 0302 C4F20000 		movt	r0, 16384
 513 0306 1946     		mov	r1, r3
 514 0308 FFF7FEFF 		bl	TIM_SetCompare3
 515              	.L22:
 214:../stm32f4xx_it.c ****         }
 215:../stm32f4xx_it.c ****         /* Time base configuration */
 216:../stm32f4xx_it.c ****         TIM_SetAutoreload(TIM4,  TIM_ARR/TempAcceleration);
 516              		.loc 1 216 0
 517 030c 40F20003 		movw	r3, #:lower16:TempAcceleration
 518 0310 C0F20003 		movt	r3, #:upper16:TempAcceleration
 519 0314 1B78     		ldrb	r3, [r3, #0]
 520 0316 DBB2     		uxtb	r3, r3
 521 0318 40F2CF72 		movw	r2, #1999
 522 031c 92FBF3F3 		sdiv	r3, r2, r3
 523 0320 4FF40060 		mov	r0, #2048
 524 0324 C4F20000 		movt	r0, 16384
 525 0328 1946     		mov	r1, r3
 526 032a FFF7FEFF 		bl	TIM_SetAutoreload
 527              	.L18:
 217:../stm32f4xx_it.c ****       }
 218:../stm32f4xx_it.c ****       Counter = 0x00;
 528              		.loc 1 218 0
 529 032e 40F20003 		movw	r3, #:lower16:Counter
 530 0332 C0F20003 		movt	r3, #:upper16:Counter
 531 0336 4FF00002 		mov	r2, #0
 532 033a 1A70     		strb	r2, [r3, #0]
 533              	.L13:
 219:../stm32f4xx_it.c ****     }  
 220:../stm32f4xx_it.c ****   }
 221:../stm32f4xx_it.c ****   
 222:../stm32f4xx_it.c **** }
 534              		.loc 1 222 0
 535 033c 07F11007 		add	r7, r7, #16
 536 0340 BD46     		mov	sp, r7
 537 0342 80BD     		pop	{r7, pc}
 538              		.cfi_endproc
 539              	.LFE118:
 541              		.align	2
 542              		.global	EXTI0_IRQHandler
 543              		.thumb
 544              		.thumb_func
 546              	EXTI0_IRQHandler:
 547              	.LFB119:
 223:../stm32f4xx_it.c **** 
 224:../stm32f4xx_it.c **** /******************************************************************************/
 225:../stm32f4xx_it.c **** /*                 STM32Fxxx Peripherals Interrupt Handlers                   */
 226:../stm32f4xx_it.c **** /*  Add here the Interrupt Handler for the used peripheral(s) (PPP), for the  */
 227:../stm32f4xx_it.c **** /*  available peripheral interrupt handler's name please refer to the startup */
 228:../stm32f4xx_it.c **** /*  file (startup_stm32fxxx.s).                                               */
 229:../stm32f4xx_it.c **** /******************************************************************************/
 230:../stm32f4xx_it.c **** 
 231:../stm32f4xx_it.c **** /**
 232:../stm32f4xx_it.c ****   * @brief  This function handles PPP interrupt request.
 233:../stm32f4xx_it.c ****   * @param  None
 234:../stm32f4xx_it.c ****   * @retval None
 235:../stm32f4xx_it.c ****   */
 236:../stm32f4xx_it.c **** /*void PPP_IRQHandler(void)
 237:../stm32f4xx_it.c **** {
 238:../stm32f4xx_it.c **** }*/
 239:../stm32f4xx_it.c **** 
 240:../stm32f4xx_it.c **** /**
 241:../stm32f4xx_it.c ****   * @brief  This function handles EXTI0_IRQ Handler.
 242:../stm32f4xx_it.c ****   * @param  None
 243:../stm32f4xx_it.c ****   * @retval None
 244:../stm32f4xx_it.c ****   */
 245:../stm32f4xx_it.c **** void EXTI0_IRQHandler(void)
 246:../stm32f4xx_it.c **** {
 548              		.loc 1 246 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 1, uses_anonymous_args = 0
 552 0344 80B5     		push	{r7, lr}
 553              	.LCFI19:
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 14, -4
 556              		.cfi_offset 7, -8
 557 0346 00AF     		add	r7, sp, #0
 558              	.LCFI20:
 559              		.cfi_def_cfa_register 7
 247:../stm32f4xx_it.c ****   UserButtonPressed = 0x01;
 560              		.loc 1 247 0
 561 0348 40F20003 		movw	r3, #:lower16:UserButtonPressed
 562 034c C0F20003 		movt	r3, #:upper16:UserButtonPressed
 563 0350 4FF00102 		mov	r2, #1
 564 0354 1A70     		strb	r2, [r3, #0]
 248:../stm32f4xx_it.c ****   
 249:../stm32f4xx_it.c ****   /* Clear the EXTI line pending bit */
 250:../stm32f4xx_it.c ****   EXTI_ClearITPendingBit(USER_BUTTON_EXTI_LINE);
 565              		.loc 1 250 0
 566 0356 4FF00100 		mov	r0, #1
 567 035a FFF7FEFF 		bl	EXTI_ClearITPendingBit
 251:../stm32f4xx_it.c **** }
 568              		.loc 1 251 0
 569 035e 80BD     		pop	{r7, pc}
 570              		.cfi_endproc
 571              	.LFE119:
 573              		.align	2
 574              		.global	OTG_FS_WKUP_IRQHandler
 575              		.thumb
 576              		.thumb_func
 578              	OTG_FS_WKUP_IRQHandler:
 579              	.LFB120:
 252:../stm32f4xx_it.c **** 
 253:../stm32f4xx_it.c **** /**
 254:../stm32f4xx_it.c ****   * @brief  This function handles EXTI15_10_IRQ Handler.
 255:../stm32f4xx_it.c ****   * @param  None
 256:../stm32f4xx_it.c ****   * @retval None
 257:../stm32f4xx_it.c ****   */
 258:../stm32f4xx_it.c **** void OTG_FS_WKUP_IRQHandler(void)
 259:../stm32f4xx_it.c **** {
 580              		.loc 1 259 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 1, uses_anonymous_args = 0
 584 0360 80B5     		push	{r7, lr}
 585              	.LCFI21:
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 14, -4
 588              		.cfi_offset 7, -8
 589 0362 00AF     		add	r7, sp, #0
 590              	.LCFI22:
 591              		.cfi_def_cfa_register 7
 260:../stm32f4xx_it.c ****   if(USB_OTG_dev.cfg.low_power)
 592              		.loc 1 260 0
 593 0364 40F20003 		movw	r3, #:lower16:USB_OTG_dev
 594 0368 C0F20003 		movt	r3, #:upper16:USB_OTG_dev
 595 036c 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 596 036e 002B     		cmp	r3, #0
 597 0370 13D0     		beq	.L25
 261:../stm32f4xx_it.c ****   {
 262:../stm32f4xx_it.c **** 	/* Reset SLEEPDEEP and SLEEPONEXIT bits */
 263:../stm32f4xx_it.c **** 	SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 598              		.loc 1 263 0
 599 0372 4FF46D43 		mov	r3, #60672
 600 0376 CEF20003 		movt	r3, 57344
 601 037a 4FF46D42 		mov	r2, #60672
 602 037e CEF20002 		movt	r2, 57344
 603 0382 1269     		ldr	r2, [r2, #16]
 604 0384 22F00602 		bic	r2, r2, #6
 605 0388 1A61     		str	r2, [r3, #16]
 264:../stm32f4xx_it.c **** 
 265:../stm32f4xx_it.c **** 	/* After wake-up from sleep mode, reconfigure the system clock */
 266:../stm32f4xx_it.c **** 	SystemInit();
 606              		.loc 1 266 0
 607 038a FFF7FEFF 		bl	SystemInit
 267:../stm32f4xx_it.c ****     USB_OTG_UngateClock(&USB_OTG_dev);
 608              		.loc 1 267 0
 609 038e 40F20000 		movw	r0, #:lower16:USB_OTG_dev
 610 0392 C0F20000 		movt	r0, #:upper16:USB_OTG_dev
 611 0396 FFF7FEFF 		bl	USB_OTG_UngateClock
 612              	.L25:
 268:../stm32f4xx_it.c ****   }
 269:../stm32f4xx_it.c ****   EXTI_ClearITPendingBit(EXTI_Line18);
 613              		.loc 1 269 0
 614 039a 4FF48020 		mov	r0, #262144
 615 039e FFF7FEFF 		bl	EXTI_ClearITPendingBit
 270:../stm32f4xx_it.c **** }
 616              		.loc 1 270 0
 617 03a2 80BD     		pop	{r7, pc}
 618              		.cfi_endproc
 619              	.LFE120:
 621              		.align	2
 622              		.global	OTG_FS_IRQHandler
 623              		.thumb
 624              		.thumb_func
 626              	OTG_FS_IRQHandler:
 627              	.LFB121:
 271:../stm32f4xx_it.c **** 
 272:../stm32f4xx_it.c **** /**
 273:../stm32f4xx_it.c ****   * @brief  This function handles OTG_HS Handler.
 274:../stm32f4xx_it.c ****   * @param  None
 275:../stm32f4xx_it.c ****   * @retval None
 276:../stm32f4xx_it.c ****   */
 277:../stm32f4xx_it.c **** void OTG_FS_IRQHandler(void)
 278:../stm32f4xx_it.c **** {
 628              		.loc 1 278 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 03a4 80B5     		push	{r7, lr}
 633              	.LCFI23:
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 14, -4
 636              		.cfi_offset 7, -8
 637 03a6 00AF     		add	r7, sp, #0
 638              	.LCFI24:
 639              		.cfi_def_cfa_register 7
 279:../stm32f4xx_it.c ****   USBD_OTG_ISR_Handler (&USB_OTG_dev);
 640              		.loc 1 279 0
 641 03a8 40F20000 		movw	r0, #:lower16:USB_OTG_dev
 642 03ac C0F20000 		movt	r0, #:upper16:USB_OTG_dev
 643 03b0 FFF7FEFF 		bl	USBD_OTG_ISR_Handler
 280:../stm32f4xx_it.c **** }
 644              		.loc 1 280 0
 645 03b4 80BD     		pop	{r7, pc}
 646              		.cfi_endproc
 647              	.LFE121:
 649 03b6 00BF     		.align	2
 650              		.thumb
 651              		.thumb_func
 653              	USBD_HID_GetPos:
 654              	.LFB122:
 281:../stm32f4xx_it.c **** 
 282:../stm32f4xx_it.c **** /**
 283:../stm32f4xx_it.c **** * @brief  USBD_HID_GetPos
 284:../stm32f4xx_it.c **** * @param  None
 285:../stm32f4xx_it.c **** * @retval Pointer to report
 286:../stm32f4xx_it.c **** */
 287:../stm32f4xx_it.c **** static uint8_t *USBD_HID_GetPos (void)
 288:../stm32f4xx_it.c **** {
 655              		.loc 1 288 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 1, uses_anonymous_args = 0
 659              		@ link register save eliminated.
 660 03b8 80B4     		push	{r7}
 661              	.LCFI25:
 662              		.cfi_def_cfa_offset 4
 663              		.cfi_offset 7, -4
 664 03ba 00AF     		add	r7, sp, #0
 665              	.LCFI26:
 666              		.cfi_def_cfa_register 7
 289:../stm32f4xx_it.c ****   static uint8_t HID_Buffer[4] = {0};
 290:../stm32f4xx_it.c ****   
 291:../stm32f4xx_it.c ****   HID_Buffer[1] = 0;
 667              		.loc 1 291 0
 668 03bc 40F20003 		movw	r3, #:lower16:HID_Buffer.9265
 669 03c0 C0F20003 		movt	r3, #:upper16:HID_Buffer.9265
 670 03c4 4FF00002 		mov	r2, #0
 671 03c8 5A70     		strb	r2, [r3, #1]
 292:../stm32f4xx_it.c ****   HID_Buffer[2] = 0;
 672              		.loc 1 292 0
 673 03ca 40F20003 		movw	r3, #:lower16:HID_Buffer.9265
 674 03ce C0F20003 		movt	r3, #:upper16:HID_Buffer.9265
 675 03d2 4FF00002 		mov	r2, #0
 676 03d6 9A70     		strb	r2, [r3, #2]
 293:../stm32f4xx_it.c ****   /* LEFT Direction */
 294:../stm32f4xx_it.c ****   if(((int8_t)Buffer[2]) < -2)
 677              		.loc 1 294 0
 678 03d8 40F20003 		movw	r3, #:lower16:Buffer
 679 03dc C0F20003 		movt	r3, #:upper16:Buffer
 680 03e0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 681 03e2 DBB2     		uxtb	r3, r3
 682 03e4 5BB2     		sxtb	r3, r3
 683 03e6 13F1020F 		cmn	r3, #2
 684 03ea 0CDA     		bge	.L28
 295:../stm32f4xx_it.c ****   {
 296:../stm32f4xx_it.c ****     HID_Buffer[1] += CURSOR_STEP;
 685              		.loc 1 296 0
 686 03ec 40F20003 		movw	r3, #:lower16:HID_Buffer.9265
 687 03f0 C0F20003 		movt	r3, #:upper16:HID_Buffer.9265
 688 03f4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 689 03f6 03F10703 		add	r3, r3, #7
 690 03fa DAB2     		uxtb	r2, r3
 691 03fc 40F20003 		movw	r3, #:lower16:HID_Buffer.9265
 692 0400 C0F20003 		movt	r3, #:upper16:HID_Buffer.9265
 693 0404 5A70     		strb	r2, [r3, #1]
 694              	.L28:
 297:../stm32f4xx_it.c ****   }
 298:../stm32f4xx_it.c ****   /* RIGHT Direction */ 
 299:../stm32f4xx_it.c ****   if(((int8_t)Buffer[2]) > 2)
 695              		.loc 1 299 0
 696 0406 40F20003 		movw	r3, #:lower16:Buffer
 697 040a C0F20003 		movt	r3, #:upper16:Buffer
 698 040e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 699 0410 DBB2     		uxtb	r3, r3
 700 0412 5BB2     		sxtb	r3, r3
 701 0414 022B     		cmp	r3, #2
 702 0416 0CDD     		ble	.L29
 300:../stm32f4xx_it.c ****   {
 301:../stm32f4xx_it.c ****    HID_Buffer[1] -= CURSOR_STEP;
 703              		.loc 1 301 0
 704 0418 40F20003 		movw	r3, #:lower16:HID_Buffer.9265
 705 041c C0F20003 		movt	r3, #:upper16:HID_Buffer.9265
 706 0420 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 707 0422 A3F10703 		sub	r3, r3, #7
 708 0426 DAB2     		uxtb	r2, r3
 709 0428 40F20003 		movw	r3, #:lower16:HID_Buffer.9265
 710 042c C0F20003 		movt	r3, #:upper16:HID_Buffer.9265
 711 0430 5A70     		strb	r2, [r3, #1]
 712              	.L29:
 302:../stm32f4xx_it.c ****   } 
 303:../stm32f4xx_it.c ****   /* UP Direction */
 304:../stm32f4xx_it.c ****   if(((int8_t)Buffer[0]) < -2)
 713              		.loc 1 304 0
 714 0432 40F20003 		movw	r3, #:lower16:Buffer
 715 0436 C0F20003 		movt	r3, #:upper16:Buffer
 716 043a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 717 043c DBB2     		uxtb	r3, r3
 718 043e 5BB2     		sxtb	r3, r3
 719 0440 13F1020F 		cmn	r3, #2
 720 0444 0CDA     		bge	.L30
 305:../stm32f4xx_it.c ****   {
 306:../stm32f4xx_it.c ****     HID_Buffer[2] += CURSOR_STEP;
 721              		.loc 1 306 0
 722 0446 40F20003 		movw	r3, #:lower16:HID_Buffer.9265
 723 044a C0F20003 		movt	r3, #:upper16:HID_Buffer.9265
 724 044e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 725 0450 03F10703 		add	r3, r3, #7
 726 0454 DAB2     		uxtb	r2, r3
 727 0456 40F20003 		movw	r3, #:lower16:HID_Buffer.9265
 728 045a C0F20003 		movt	r3, #:upper16:HID_Buffer.9265
 729 045e 9A70     		strb	r2, [r3, #2]
 730              	.L30:
 307:../stm32f4xx_it.c ****   }
 308:../stm32f4xx_it.c ****   /* DOWN Direction */ 
 309:../stm32f4xx_it.c ****   if(((int8_t)Buffer[0]) > 2)
 731              		.loc 1 309 0
 732 0460 40F20003 		movw	r3, #:lower16:Buffer
 733 0464 C0F20003 		movt	r3, #:upper16:Buffer
 734 0468 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 735 046a DBB2     		uxtb	r3, r3
 736 046c 5BB2     		sxtb	r3, r3
 737 046e 022B     		cmp	r3, #2
 738 0470 0CDD     		ble	.L31
 310:../stm32f4xx_it.c ****   {
 311:../stm32f4xx_it.c ****     HID_Buffer[2] -= CURSOR_STEP;
 739              		.loc 1 311 0
 740 0472 40F20003 		movw	r3, #:lower16:HID_Buffer.9265
 741 0476 C0F20003 		movt	r3, #:upper16:HID_Buffer.9265
 742 047a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 743 047c A3F10703 		sub	r3, r3, #7
 744 0480 DAB2     		uxtb	r2, r3
 745 0482 40F20003 		movw	r3, #:lower16:HID_Buffer.9265
 746 0486 C0F20003 		movt	r3, #:upper16:HID_Buffer.9265
 747 048a 9A70     		strb	r2, [r3, #2]
 748              	.L31:
 312:../stm32f4xx_it.c ****   } 
 313:../stm32f4xx_it.c ****   
 314:../stm32f4xx_it.c ****   return HID_Buffer;
 749              		.loc 1 314 0
 750 048c 40F20003 		movw	r3, #:lower16:HID_Buffer.9265
 751 0490 C0F20003 		movt	r3, #:upper16:HID_Buffer.9265
 315:../stm32f4xx_it.c **** }
 752              		.loc 1 315 0
 753 0494 1846     		mov	r0, r3
 754 0496 BD46     		mov	sp, r7
 755 0498 80BC     		pop	{r7}
 756 049a 7047     		bx	lr
 757              		.cfi_endproc
 758              	.LFE122:
 760              		.bss
 761 0002 0000     		.align	2
 762              	HID_Buffer.9265:
 763 0004 00000000 		.space	4
 764              		.text
 765              	.Letext0:
 766              		.file 2 "/Users/josefvanniekerk/Developer/Cross/arm-cs-tools-2012.03-56-e3f4013-20130305/lib/gcc/a
 767              		.file 3 "/Users/josefvanniekerk/Projects/stm32f4-discovery/projects/demonstration/../../libraries/
 768              		.file 4 "/Users/josefvanniekerk/Projects/stm32f4-discovery/projects/demonstration/../../libraries/
 769              		.file 5 "/Users/josefvanniekerk/Projects/stm32f4-discovery/projects/demonstration/../../libraries/
 770              		.file 6 "/Users/josefvanniekerk/Projects/stm32f4-discovery/projects/demonstration/../../libraries/
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:22     .bss:0000000000000000 Counter
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:23     .bss:0000000000000000 $d
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:27     .bss:0000000000000001 TempAcceleration
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:30     .text:0000000000000000 $t
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:35     .text:0000000000000000 NMI_Handler
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:62     .text:000000000000000c HardFault_Handler
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:87     .text:0000000000000014 MemManage_Handler
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:112    .text:000000000000001c BusFault_Handler
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:137    .text:0000000000000024 UsageFault_Handler
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:162    .text:000000000000002c SVC_Handler
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:188    .text:0000000000000038 DebugMon_Handler
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:214    .text:0000000000000044 PendSV_Handler
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:240    .text:0000000000000050 SysTick_Handler
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:653    .text:00000000000003b8 USBD_HID_GetPos
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:546    .text:0000000000000344 EXTI0_IRQHandler
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:578    .text:0000000000000360 OTG_FS_WKUP_IRQHandler
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:626    .text:00000000000003a4 OTG_FS_IRQHandler
/var/folders/29/q4vqrldx53dd1j615jflh8h40000gn/T//ccDzimyZ.s:762    .bss:0000000000000004 HID_Buffer.9265
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
DemoEnterCondition
TimingDelay_Decrement
USB_OTG_dev
USBD_HID_SendReport
Buffer
TIM_CCxCmd
LIS302DL_Read
X_Offset
Y_Offset
TIM_SetCompare4
TIM_SetCompare2
TIM_SetCompare1
TIM_SetCompare3
TIM_SetAutoreload
UserButtonPressed
EXTI_ClearITPendingBit
SystemInit
USB_OTG_UngateClock
USBD_OTG_ISR_Handler
